{
    "swagger": "2.0",
    "info": {
        "description": "Api-gateway service",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:9000",
    "basePath": "/",
    "paths": {
        "/admin/beds": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets beds list by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BEDS"
                ],
                "summary": "GET BEDS LIST",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by room number, status, etc",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListBedsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method creates bed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BEDS"
                ],
                "summary": "CREATE BED",
                "parameters": [
                    {
                        "description": "Bed",
                        "name": "bed",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateBedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateBedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/beds/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets bed by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BEDS"
                ],
                "summary": "GET BED BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bed Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetBedByIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates bed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BEDS"
                ],
                "summary": "UPDATE BED",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bed Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bed",
                        "name": "bed",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateBedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method deletes bed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BEDS"
                ],
                "summary": "DELETE BED",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bed Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteBedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/departments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets departments list by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPARTMENTS"
                ],
                "summary": "GET DEPARTMENTS LIST",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListDepartmentsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method creates department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPARTMENTS"
                ],
                "summary": "CREATE DEPARTMENT",
                "parameters": [
                    {
                        "description": "Department",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateDepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/departments/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets department by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPARTMENTS"
                ],
                "summary": "GET DEPARTMENT BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetDepartmentByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPARTMENTS"
                ],
                "summary": "UPDATE DEPARTMENTS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method deletes department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DEPARTMENTS"
                ],
                "summary": "DELETE DEPARTMENT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Department Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteDepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/doctors": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets doctors list by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DOCTORS"
                ],
                "summary": "GET DOCTORS LIST",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by name, specialization, etc",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListDoctorsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method creates doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DOCTORS"
                ],
                "summary": "CREATE DOCTOR",
                "parameters": [
                    {
                        "description": "Doctor",
                        "name": "doctor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDoctorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateDoctorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/doctors/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets doctor by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DOCTORS"
                ],
                "summary": "GET DOCTOR BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Doctor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetDoctorByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DOCTORS"
                ],
                "summary": "UPDATE DOCTOR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Doctor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Doctor",
                        "name": "doctor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDoctorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDoctorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method deletes doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DOCTORS"
                ],
                "summary": "DELETE DOCTOR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Doctor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeletePersonalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/personals": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets personals list by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PERSONALS"
                ],
                "summary": "GET PERSONALS LIST",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by profession or full_name",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListPersonalsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method creates personal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PERSONALS"
                ],
                "summary": "CREATE PERSONAL",
                "parameters": [
                    {
                        "description": "Personal",
                        "name": "personal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePersonalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreatePersonalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/personals/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets personal by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PERSONALS"
                ],
                "summary": "GET PERSONAL BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Personal Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetPersonalByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates personal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PERSONALS"
                ],
                "summary": "UPDATE PERSONAL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Personal Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Personal",
                        "name": "personal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePersonalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePersonalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method deletes personal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PERSONALS"
                ],
                "summary": "DELETE PERSONAL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Personal Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeletePersonalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/prescriptions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets prescriptions list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRESCRIPTIONS"
                ],
                "summary": "GET PRESCRIPTIONS LIST",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListPrescriptionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method creates prescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRESCRIPTIONS"
                ],
                "summary": "CREATE PRESCRIPTION",
                "parameters": [
                    {
                        "description": "Prescription",
                        "name": "prescription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePrescriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreatePrescriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/prescriptions/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets prescription by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRESCRIPTIONS"
                ],
                "summary": "GET PRESCRIPTION BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prescription Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetPrescriptionByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates prescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRESCRIPTIONS"
                ],
                "summary": "UPDATE PRESCRIPTION",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prescription id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Prescription",
                        "name": "prescription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePrescriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePrescriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method deletes prescription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PRESCRIPTIONS"
                ],
                "summary": "DELETE PRESCRIPTION",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Prescription Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeletePrescriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/doctors/appointments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets appointments list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APPOINTMENTS"
                ],
                "summary": "GET APPOINTMENTS LIST",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment date (yyyy-mm-dd)",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListAppointmentsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method creates appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APPOINTMENTS"
                ],
                "summary": "CREATE APPOINTMENT",
                "parameters": [
                    {
                        "description": "Appointment",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAppointmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateAppointmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/doctors/appointments/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets appointment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APPOINTMENTS"
                ],
                "summary": "GET APPOINTMENT BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAppointmentByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APPOINTMENTS"
                ],
                "summary": "UPDATE APPOINTMENT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Appointment",
                        "name": "appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppointmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppointmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method deletes appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "APPOINTMENTS"
                ],
                "summary": "DELETE APPOINTMENT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteAppointmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nurse/donors": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets donors list by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DONORS"
                ],
                "summary": "GET DONORS LIST",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by name/email",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by gender",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by blood group",
                        "name": "blood_group",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Only eligible donors",
                        "name": "only_eligible",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListDonorsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method creates donor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DONORS"
                ],
                "summary": "CREATE DONOR",
                "parameters": [
                    {
                        "description": "Donor",
                        "name": "donor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateDonorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateDonorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/nurse/donors/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets donor by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DONORS"
                ],
                "summary": "GET DONOR BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Donor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetDonorByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates donor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DONORS"
                ],
                "summary": "UPDATE DONOR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Donor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Donor",
                        "name": "donor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDonorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDonorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method deletes donor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DONORS"
                ],
                "summary": "DELETE DONOR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Donor Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteDonorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/patient/patients": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets patients list by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PATIENTS"
                ],
                "summary": "GET PATIENTS LIST",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by name/email/phone",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListPatientsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method creates patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PATIENTS"
                ],
                "summary": "CREATE PATIENT",
                "parameters": [
                    {
                        "description": "Patient",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePatientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreatePatientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/patient/patients/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets patient by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PATIENTS"
                ],
                "summary": "GET PATIENT BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetPatientByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PATIENTS"
                ],
                "summary": "UPDATE PATIENT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patient",
                        "name": "patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePatientRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePatientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method deletes patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PATIENTS"
                ],
                "summary": "DELETE PATIENT",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Patient Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeletePatientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pharmacist/medicines": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets medicines list by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEDICINES"
                ],
                "summary": "GET MEDICINES LIST",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by name/category/company",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListMedicinesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method creates medicine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEDICINES"
                ],
                "summary": "CREATE MEDICINE",
                "parameters": [
                    {
                        "description": "Medicine",
                        "name": "medicine",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateMedicineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateMedicineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pharmacist/medicines/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method gets medicine by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEDICINES"
                ],
                "summary": "GET MEDICINE BY ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medicine Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetMedicineByIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method updates medicine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEDICINES"
                ],
                "summary": "UPDATE MEDICINE",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medicine Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Medicine",
                        "name": "medicine",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateMedicineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateMedicineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This method deletes medicine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEDICINES"
                ],
                "summary": "DELETE MEDICINE",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medicine Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteMedicineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Appointment": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps2"
                }
            }
        },
        "models.BedInfo": {
            "type": "object",
            "properties": {
                "bed_number": {
                    "type": "integer"
                },
                "bed_type": {
                    "$ref": "#/definitions/models.BedType"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.BedStatus"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps1"
                }
            }
        },
        "models.BedStatus": {
            "type": "string",
            "enum": [
                "BED_UNSPECIFIED",
                "BED_AVAILABLE",
                "BED_OCCUPIED",
                "BED_RESERVED",
                "BED_MAINTENANCE"
            ],
            "x-enum-varnames": [
                "BedUnspecified",
                "BedAvailable",
                "BedOccupied",
                "BedReserved",
                "BedMaintenance"
            ]
        },
        "models.BedType": {
            "type": "string",
            "enum": [
                "BED_TYPE_UNSPECIFIED",
                "GENERAL",
                "PERSONAL",
                "ICU",
                "SURGICAL"
            ],
            "x-enum-varnames": [
                "BedTypeUnspecified",
                "General",
                "Personall",
                "ICU",
                "Surgical"
            ]
        },
        "models.BloodType": {
            "type": "string",
            "enum": [
                "BLOOD_TYPE_UNSPECIFIED",
                "A_POSITIVE",
                "A_NEGATIVE",
                "B_POSITIVE",
                "B_NEGATIVE",
                "AB_POSITIVE",
                "AB_NEGATIVE",
                "O_POSITIVE",
                "O_NEGATIVE"
            ],
            "x-enum-varnames": [
                "BloodUnspecified",
                "APositive",
                "ANegative",
                "BPositive",
                "BNegative",
                "ABPositive",
                "ABNegative",
                "OPositive",
                "ONegative"
            ]
        },
        "models.CreateAppointmentRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateAppointmentResponse": {
            "type": "object",
            "properties": {
                "appointment": {
                    "$ref": "#/definitions/models.Appointment"
                }
            }
        },
        "models.CreateBedRequest": {
            "type": "object",
            "properties": {
                "bed_number": {
                    "type": "integer"
                },
                "bed_type": {
                    "$ref": "#/definitions/models.BedType"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "models.CreateBedResponse": {
            "type": "object",
            "properties": {
                "bed": {
                    "$ref": "#/definitions/models.BedInfo"
                }
            }
        },
        "models.CreateDepartmentRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                }
            }
        },
        "models.CreateDepartmentResponse": {
            "type": "object",
            "properties": {
                "department": {
                    "$ref": "#/definitions/models.Department"
                }
            }
        },
        "models.CreateDoctorRequest": {
            "type": "object",
            "properties": {
                "department_number": {
                    "type": "integer"
                },
                "personal_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateDoctorResponse": {
            "type": "object",
            "properties": {
                "department_number": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "personal_id": {
                    "type": "string"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps1"
                }
            }
        },
        "models.CreateDonorRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Street, City"
                },
                "birth_date": {
                    "type": "string",
                    "example": "1990-01-01"
                },
                "blood_group": {
                    "type": "string",
                    "example": "O+"
                },
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "gender": {
                    "type": "string",
                    "example": "Male"
                },
                "health_conditions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.HealthConditionType"
                        }
                    ],
                    "example": "healthy"
                },
                "password": {
                    "type": "string",
                    "example": "secret123"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+998901234567"
                },
                "weight": {
                    "type": "number",
                    "example": 72.5
                }
            }
        },
        "models.CreateDonorResponse": {
            "type": "object",
            "properties": {
                "donor": {
                    "$ref": "#/definitions/models.PatientDonor"
                }
            }
        },
        "models.CreateMedicineRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.MedicineCategory"
                },
                "company": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/models.MedicineStatus"
                }
            }
        },
        "models.CreateMedicineResponse": {
            "type": "object",
            "properties": {
                "medicine": {
                    "$ref": "#/definitions/models.Medicine"
                }
            }
        },
        "models.CreatePatientRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "blood_group": {
                    "$ref": "#/definitions/models.BloodType"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/models.GenderType"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.CreatePatientResponse": {
            "type": "object",
            "properties": {
                "patient": {
                    "$ref": "#/definitions/models.Patient"
                }
            }
        },
        "models.CreatePersonalRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "profession": {
                    "type": "string"
                }
            }
        },
        "models.CreatePersonalResponse": {
            "type": "object",
            "properties": {
                "personal": {
                    "$ref": "#/definitions/models.Personal"
                }
            }
        },
        "models.CreatePrescriptionRequest": {
            "type": "object",
            "properties": {
                "case_history": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "medication": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                }
            }
        },
        "models.CreatePrescriptionResponse": {
            "type": "object",
            "properties": {
                "prescription": {
                    "$ref": "#/definitions/models.Prescription"
                }
            }
        },
        "models.DeleteAppointmentResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "204 = deleted",
                    "type": "integer"
                }
            }
        },
        "models.DeleteBedResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                }
            }
        },
        "models.DeleteDepartmentResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "204 = deleted",
                    "type": "integer"
                }
            }
        },
        "models.DeleteDonorResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "example": 204
                }
            }
        },
        "models.DeleteMedicineResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "204 = deleted",
                    "type": "integer"
                }
            }
        },
        "models.DeletePatientResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "204 = deleted",
                    "type": "integer"
                }
            }
        },
        "models.DeletePersonalResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer"
                }
            }
        },
        "models.DeletePrescriptionResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "204 = deleted",
                    "type": "integer"
                }
            }
        },
        "models.Department": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps1"
                }
            }
        },
        "models.Doctor": {
            "type": "object",
            "properties": {
                "department_number": {
                    "type": "integer"
                },
                "info": {
                    "$ref": "#/definitions/models.Personal"
                },
                "personal_id": {
                    "type": "string"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps1"
                }
            }
        },
        "models.GenderType": {
            "type": "string",
            "enum": [
                "GENDER_TYPE_UNSPECIFIED",
                "MALE",
                "FEMALE"
            ],
            "x-enum-varnames": [
                "GenderUnspecified",
                "GenderMale",
                "GenderFemale"
            ]
        },
        "models.GetAppointmentByIdResponse": {
            "type": "object",
            "properties": {
                "appointment": {
                    "$ref": "#/definitions/models.Appointment"
                }
            }
        },
        "models.GetBedByIDResponse": {
            "type": "object",
            "properties": {
                "bed": {
                    "$ref": "#/definitions/models.BedInfo"
                }
            }
        },
        "models.GetDepartmentByIdResponse": {
            "type": "object",
            "properties": {
                "department": {
                    "$ref": "#/definitions/models.Department"
                }
            }
        },
        "models.GetDoctorByIdResponse": {
            "type": "object",
            "properties": {
                "doctor": {
                    "$ref": "#/definitions/models.Doctor"
                }
            }
        },
        "models.GetDonorByIdResponse": {
            "type": "object",
            "properties": {
                "donor": {
                    "$ref": "#/definitions/models.PatientDonor"
                }
            }
        },
        "models.GetMedicineByIdResponse": {
            "type": "object",
            "properties": {
                "medicine": {
                    "$ref": "#/definitions/models.Medicine"
                }
            }
        },
        "models.GetPatientByIdResponse": {
            "type": "object",
            "properties": {
                "patient": {
                    "$ref": "#/definitions/models.Patient"
                }
            }
        },
        "models.GetPersonalByIdResponse": {
            "type": "object",
            "properties": {
                "personal": {
                    "$ref": "#/definitions/models.Personal"
                }
            }
        },
        "models.GetPrescriptionByIdResponse": {
            "type": "object",
            "properties": {
                "prescription": {
                    "$ref": "#/definitions/models.Prescription"
                }
            }
        },
        "models.HealthConditionType": {
            "type": "string",
            "enum": [
                "healthy",
                "minor_illness",
                "chronic",
                "not_eligible"
            ],
            "x-enum-varnames": [
                "Healthy",
                "MinorIllness",
                "Chronic",
                "NotEligible"
            ]
        },
        "models.ListAppointmentsResponse": {
            "type": "object",
            "properties": {
                "appointments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Appointment"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ListBedsResponse": {
            "type": "object",
            "properties": {
                "beds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BedInfo"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ListDepartmentsResponse": {
            "type": "object",
            "properties": {
                "departments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Department"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ListDoctorsResponse": {
            "type": "object",
            "properties": {
                "doctors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Doctor"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ListDonorsResponse": {
            "type": "object",
            "properties": {
                "patients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PatientDonor"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ListMedicinesResponse": {
            "type": "object",
            "properties": {
                "medicines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Medicine"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ListPatientsResponse": {
            "type": "object",
            "properties": {
                "patients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Patient"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ListPersonalsResponse": {
            "type": "object",
            "properties": {
                "personals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Personal"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ListPrescriptionsResponse": {
            "type": "object",
            "properties": {
                "prescriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Prescription"
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.Medicine": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.MedicineCategory"
                },
                "company": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/models.MedicineStatus"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps5"
                }
            }
        },
        "models.MedicineCategory": {
            "type": "string",
            "enum": [
                "MEDICINE_CATEGORY_UNSPECIFIED",
                "MEDICINE_CATEGORY_ANTIBIOTIC",
                "MEDICINE_CATEGORY_ANALGESIC",
                "MEDICINE_CATEGORY_ANTIVIRAL",
                "MEDICINE_CATEGORY_VITAMINS",
                "MEDICINE_CATEGORY_ANTIFUNGAL",
                "MEDICINE_CATEGORY_VACCINE",
                "MEDICINE_CATEGORY_OTHER"
            ],
            "x-enum-varnames": [
                "MedicineCategoryUnspecified",
                "MedicineCategoryAntibiotic",
                "MedicineCategoryAnalgesic",
                "MedicineCategoryAntiviral",
                "MedicineCategoryVitamins",
                "MedicineCategoryAntifungal",
                "MedicineCategoryVaccine",
                "MedicineCategoryOther"
            ]
        },
        "models.MedicineStatus": {
            "type": "string",
            "enum": [
                "MEDICINE_STATUS_UNSPECIFIED",
                "MEDICINE_STATUS_AVAILABLE",
                "MEDICINE_STATUS_OUT_OF_STOCK",
                "MEDICINE_STATUS_EXPIRED",
                "MEDICINE_STATUS_DISCONTINUED"
            ],
            "x-enum-varnames": [
                "MedicineStatusUnspecified",
                "MedicineStatusAvailable",
                "MedicineStatusOutOfStock",
                "MedicineStatusExpired",
                "MedicineStatusDiscontinued"
            ]
        },
        "models.Patient": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "blood_group": {
                    "$ref": "#/definitions/models.BloodType"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/models.GenderType"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps4"
                }
            }
        },
        "models.PatientDonor": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main Street, City"
                },
                "birth_date": {
                    "type": "string",
                    "example": "1990-01-01"
                },
                "blood_group": {
                    "type": "string",
                    "example": "O+"
                },
                "donation_count": {
                    "type": "integer",
                    "example": 5
                },
                "donation_location": {
                    "type": "string",
                    "example": "City Hospital"
                },
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "gender": {
                    "type": "string",
                    "example": "Male"
                },
                "health_conditions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.HealthConditionType"
                        }
                    ],
                    "example": "healthy"
                },
                "id": {
                    "type": "string",
                    "example": "uuid"
                },
                "is_eligible": {
                    "type": "boolean",
                    "example": true
                },
                "last_checkup_date": {
                    "type": "string",
                    "example": "2025-08-20T12:00:00Z"
                },
                "last_donation": {
                    "type": "string",
                    "example": "2025-09-01T12:00:00Z"
                },
                "password": {
                    "type": "string",
                    "example": "hashed_password"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+998901234567"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps3"
                },
                "weight": {
                    "type": "number",
                    "example": 72.5
                }
            }
        },
        "models.Personal": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "profession": {
                    "type": "string"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps1"
                }
            }
        },
        "models.Prescription": {
            "type": "object",
            "properties": {
                "case_history": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "medication": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps2"
                }
            }
        },
        "models.Timestamps1": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Timestamps2": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Timestamps3": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Timestamps4": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Timestamps5": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAppointmentRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "doctor_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "patient_id": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAppointmentResponse": {
            "type": "object",
            "properties": {
                "appointment": {
                    "$ref": "#/definitions/models.Appointment"
                }
            }
        },
        "models.UpdateBedRequest": {
            "type": "object",
            "properties": {
                "bed_number": {
                    "type": "integer"
                },
                "bed_type": {
                    "$ref": "#/definitions/models.BedType"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.BedStatus"
                }
            }
        },
        "models.UpdateBedResponse": {
            "type": "object",
            "properties": {
                "bed": {
                    "$ref": "#/definitions/models.BedInfo"
                }
            }
        },
        "models.UpdateDepartmentRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateDepartmentResponse": {
            "type": "object",
            "properties": {
                "department": {
                    "$ref": "#/definitions/models.Department"
                }
            }
        },
        "models.UpdateDoctorRequest": {
            "type": "object",
            "properties": {
                "department_number": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "models.UpdateDoctorResponse": {
            "type": "object",
            "properties": {
                "department_number": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "personal_id": {
                    "type": "string"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps1"
                }
            }
        },
        "models.UpdateDonorRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "456 New Street, City"
                },
                "birth_date": {
                    "type": "string",
                    "example": "1990-01-01"
                },
                "blood_group": {
                    "type": "string",
                    "example": "O+"
                },
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "gender": {
                    "type": "string",
                    "example": "Male"
                },
                "health_conditions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.HealthConditionType"
                        }
                    ],
                    "example": "minor_illness"
                },
                "id": {
                    "type": "string",
                    "example": "uuid"
                },
                "password": {
                    "type": "string",
                    "example": "newSecret123"
                },
                "phone_number": {
                    "type": "string",
                    "example": "+998901234567"
                },
                "weight": {
                    "type": "number",
                    "example": 75
                }
            }
        },
        "models.UpdateDonorResponse": {
            "type": "object",
            "properties": {
                "donor": {
                    "$ref": "#/definitions/models.PatientDonor"
                }
            }
        },
        "models.UpdateMedicineRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.MedicineCategory"
                },
                "company": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/models.MedicineStatus"
                }
            }
        },
        "models.UpdateMedicineResponse": {
            "type": "object",
            "properties": {
                "medicine": {
                    "$ref": "#/definitions/models.Medicine"
                }
            }
        },
        "models.UpdatePatientRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "blood_group": {
                    "$ref": "#/definitions/models.BloodType"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/models.GenderType"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "timestamps": {
                    "$ref": "#/definitions/models.Timestamps4"
                }
            }
        },
        "models.UpdatePatientResponse": {
            "type": "object",
            "properties": {
                "patient": {
                    "$ref": "#/definitions/models.Patient"
                }
            }
        },
        "models.UpdatePersonalRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "profession": {
                    "type": "string"
                }
            }
        },
        "models.UpdatePersonalResponse": {
            "type": "object",
            "properties": {
                "personal": {
                    "$ref": "#/definitions/models.Personal"
                }
            }
        },
        "models.UpdatePrescriptionRequest": {
            "type": "object",
            "properties": {
                "prescription": {
                    "$ref": "#/definitions/models.Prescription"
                }
            }
        },
        "models.UpdatePrescriptionResponse": {
            "type": "object",
            "properties": {
                "prescription": {
                    "$ref": "#/definitions/models.Prescription"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
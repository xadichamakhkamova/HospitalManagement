basePath: /
definitions:
  models.Appointment:
    properties:
      date:
        type: string
      doctor_id:
        type: string
      id:
        type: string
      patient_id:
        type: string
      timestamps:
        $ref: '#/definitions/models.Timestamps2'
    type: object
  models.BedInfo:
    properties:
      bed_number:
        type: integer
      bed_type:
        $ref: '#/definitions/models.BedType'
      description:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/models.BedStatus'
      timestamps:
        $ref: '#/definitions/models.Timestamps1'
    type: object
  models.BedStatus:
    enum:
    - BED_UNSPECIFIED
    - BED_AVAILABLE
    - BED_OCCUPIED
    - BED_RESERVED
    - BED_MAINTENANCE
    type: string
    x-enum-varnames:
    - BedUnspecified
    - BedAvailable
    - BedOccupied
    - BedReserved
    - BedMaintenance
  models.BedType:
    enum:
    - BED_TYPE_UNSPECIFIED
    - GENERAL
    - PERSONAL
    - ICU
    - SURGICAL
    type: string
    x-enum-varnames:
    - BedTypeUnspecified
    - General
    - Personall
    - ICU
    - Surgical
  models.BloodType:
    enum:
    - BLOOD_TYPE_UNSPECIFIED
    - A_POSITIVE
    - A_NEGATIVE
    - B_POSITIVE
    - B_NEGATIVE
    - AB_POSITIVE
    - AB_NEGATIVE
    - O_POSITIVE
    - O_NEGATIVE
    type: string
    x-enum-varnames:
    - BloodUnspecified
    - APositive
    - ANegative
    - BPositive
    - BNegative
    - ABPositive
    - ABNegative
    - OPositive
    - ONegative
  models.CreateAppointmentRequest:
    properties:
      date:
        type: string
      doctor_id:
        type: string
      patient_id:
        type: string
    type: object
  models.CreateAppointmentResponse:
    properties:
      appointment:
        $ref: '#/definitions/models.Appointment'
    type: object
  models.CreateBedRequest:
    properties:
      bed_number:
        type: integer
      bed_type:
        $ref: '#/definitions/models.BedType'
      description:
        type: string
    type: object
  models.CreateBedResponse:
    properties:
      bed:
        $ref: '#/definitions/models.BedInfo'
    type: object
  models.CreateDepartmentRequest:
    properties:
      description:
        type: string
      name:
        type: string
      number:
        type: integer
    type: object
  models.CreateDepartmentResponse:
    properties:
      department:
        $ref: '#/definitions/models.Department'
    type: object
  models.CreateDoctorRequest:
    properties:
      department_number:
        type: integer
      personal_id:
        type: string
    type: object
  models.CreateDoctorResponse:
    properties:
      department_number:
        type: integer
      id:
        type: string
      personal_id:
        type: string
      timestamps:
        $ref: '#/definitions/models.Timestamps1'
    type: object
  models.CreateDonorRequest:
    properties:
      address:
        example: 123 Street, City
        type: string
      birth_date:
        example: "1990-01-01"
        type: string
      blood_group:
        example: O+
        type: string
      email:
        example: john@example.com
        type: string
      full_name:
        example: John Doe
        type: string
      gender:
        example: Male
        type: string
      health_conditions:
        allOf:
        - $ref: '#/definitions/models.HealthConditionType'
        example: healthy
      password:
        example: secret123
        type: string
      phone_number:
        example: "+998901234567"
        type: string
      weight:
        example: 72.5
        type: number
    type: object
  models.CreateDonorResponse:
    properties:
      donor:
        $ref: '#/definitions/models.PatientDonor'
    type: object
  models.CreateMedicineRequest:
    properties:
      category:
        $ref: '#/definitions/models.MedicineCategory'
      company:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      status:
        $ref: '#/definitions/models.MedicineStatus'
    type: object
  models.CreateMedicineResponse:
    properties:
      medicine:
        $ref: '#/definitions/models.Medicine'
    type: object
  models.CreatePatientRequest:
    properties:
      address:
        type: string
      birth_date:
        type: string
      blood_group:
        $ref: '#/definitions/models.BloodType'
      email:
        type: string
      full_name:
        type: string
      gender:
        $ref: '#/definitions/models.GenderType'
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.CreatePatientResponse:
    properties:
      patient:
        $ref: '#/definitions/models.Patient'
    type: object
  models.CreatePersonalRequest:
    properties:
      address:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profession:
        type: string
    type: object
  models.CreatePersonalResponse:
    properties:
      personal:
        $ref: '#/definitions/models.Personal'
    type: object
  models.CreatePrescriptionRequest:
    properties:
      case_history:
        type: string
      description:
        type: string
      doctor_id:
        type: string
      medication:
        type: string
      patient_id:
        type: string
    type: object
  models.CreatePrescriptionResponse:
    properties:
      prescription:
        $ref: '#/definitions/models.Prescription'
    type: object
  models.DeleteAppointmentResponse:
    properties:
      status:
        description: 204 = deleted
        type: integer
    type: object
  models.DeleteBedResponse:
    properties:
      status:
        type: integer
    type: object
  models.DeleteDepartmentResponse:
    properties:
      status:
        description: 204 = deleted
        type: integer
    type: object
  models.DeleteDonorResponse:
    properties:
      status:
        example: 204
        type: integer
    type: object
  models.DeleteMedicineResponse:
    properties:
      status:
        description: 204 = deleted
        type: integer
    type: object
  models.DeletePatientResponse:
    properties:
      status:
        description: 204 = deleted
        type: integer
    type: object
  models.DeletePersonalResponse:
    properties:
      status:
        type: integer
    type: object
  models.DeletePrescriptionResponse:
    properties:
      status:
        description: 204 = deleted
        type: integer
    type: object
  models.Department:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      number:
        type: integer
      timestamps:
        $ref: '#/definitions/models.Timestamps1'
    type: object
  models.Doctor:
    properties:
      department_number:
        type: integer
      info:
        $ref: '#/definitions/models.Personal'
      personal_id:
        type: string
      timestamps:
        $ref: '#/definitions/models.Timestamps1'
    type: object
  models.GenderType:
    enum:
    - GENDER_TYPE_UNSPECIFIED
    - MALE
    - FEMALE
    type: string
    x-enum-varnames:
    - GenderUnspecified
    - GenderMale
    - GenderFemale
  models.GetAppointmentByIdResponse:
    properties:
      appointment:
        $ref: '#/definitions/models.Appointment'
    type: object
  models.GetBedByIDResponse:
    properties:
      bed:
        $ref: '#/definitions/models.BedInfo'
    type: object
  models.GetDepartmentByIdResponse:
    properties:
      department:
        $ref: '#/definitions/models.Department'
    type: object
  models.GetDoctorByIdResponse:
    properties:
      doctor:
        $ref: '#/definitions/models.Doctor'
    type: object
  models.GetDonorByIdResponse:
    properties:
      donor:
        $ref: '#/definitions/models.PatientDonor'
    type: object
  models.GetMedicineByIdResponse:
    properties:
      medicine:
        $ref: '#/definitions/models.Medicine'
    type: object
  models.GetPatientByIdResponse:
    properties:
      patient:
        $ref: '#/definitions/models.Patient'
    type: object
  models.GetPersonalByIdResponse:
    properties:
      personal:
        $ref: '#/definitions/models.Personal'
    type: object
  models.GetPrescriptionByIdResponse:
    properties:
      prescription:
        $ref: '#/definitions/models.Prescription'
    type: object
  models.HealthConditionType:
    enum:
    - healthy
    - minor_illness
    - chronic
    - not_eligible
    type: string
    x-enum-varnames:
    - Healthy
    - MinorIllness
    - Chronic
    - NotEligible
  models.ListAppointmentsResponse:
    properties:
      appointments:
        items:
          $ref: '#/definitions/models.Appointment'
        type: array
      total_count:
        type: integer
    type: object
  models.ListBedsResponse:
    properties:
      beds:
        items:
          $ref: '#/definitions/models.BedInfo'
        type: array
      total_count:
        type: integer
    type: object
  models.ListDepartmentsResponse:
    properties:
      departments:
        items:
          $ref: '#/definitions/models.Department'
        type: array
      total_count:
        type: integer
    type: object
  models.ListDoctorsResponse:
    properties:
      doctors:
        items:
          $ref: '#/definitions/models.Doctor'
        type: array
      total_count:
        type: integer
    type: object
  models.ListDonorsResponse:
    properties:
      patients:
        items:
          $ref: '#/definitions/models.PatientDonor'
        type: array
      total_count:
        type: integer
    type: object
  models.ListMedicinesResponse:
    properties:
      medicines:
        items:
          $ref: '#/definitions/models.Medicine'
        type: array
      total_count:
        type: integer
    type: object
  models.ListPatientsResponse:
    properties:
      patients:
        items:
          $ref: '#/definitions/models.Patient'
        type: array
      total_count:
        type: integer
    type: object
  models.ListPersonalsResponse:
    properties:
      personals:
        items:
          $ref: '#/definitions/models.Personal'
        type: array
      total_count:
        type: integer
    type: object
  models.ListPrescriptionsResponse:
    properties:
      prescriptions:
        items:
          $ref: '#/definitions/models.Prescription'
        type: array
      total_count:
        type: integer
    type: object
  models.Medicine:
    properties:
      category:
        $ref: '#/definitions/models.MedicineCategory'
      company:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      status:
        $ref: '#/definitions/models.MedicineStatus'
      timestamps:
        $ref: '#/definitions/models.Timestamps5'
    type: object
  models.MedicineCategory:
    enum:
    - MEDICINE_CATEGORY_UNSPECIFIED
    - MEDICINE_CATEGORY_ANTIBIOTIC
    - MEDICINE_CATEGORY_ANALGESIC
    - MEDICINE_CATEGORY_ANTIVIRAL
    - MEDICINE_CATEGORY_VITAMINS
    - MEDICINE_CATEGORY_ANTIFUNGAL
    - MEDICINE_CATEGORY_VACCINE
    - MEDICINE_CATEGORY_OTHER
    type: string
    x-enum-varnames:
    - MedicineCategoryUnspecified
    - MedicineCategoryAntibiotic
    - MedicineCategoryAnalgesic
    - MedicineCategoryAntiviral
    - MedicineCategoryVitamins
    - MedicineCategoryAntifungal
    - MedicineCategoryVaccine
    - MedicineCategoryOther
  models.MedicineStatus:
    enum:
    - MEDICINE_STATUS_UNSPECIFIED
    - MEDICINE_STATUS_AVAILABLE
    - MEDICINE_STATUS_OUT_OF_STOCK
    - MEDICINE_STATUS_EXPIRED
    - MEDICINE_STATUS_DISCONTINUED
    type: string
    x-enum-varnames:
    - MedicineStatusUnspecified
    - MedicineStatusAvailable
    - MedicineStatusOutOfStock
    - MedicineStatusExpired
    - MedicineStatusDiscontinued
  models.Patient:
    properties:
      address:
        type: string
      birth_date:
        type: string
      blood_group:
        $ref: '#/definitions/models.BloodType'
      email:
        type: string
      full_name:
        type: string
      gender:
        $ref: '#/definitions/models.GenderType'
      id:
        type: string
      password:
        type: string
      phone_number:
        type: string
      timestamps:
        $ref: '#/definitions/models.Timestamps4'
    type: object
  models.PatientDonor:
    properties:
      address:
        example: 123 Main Street, City
        type: string
      birth_date:
        example: "1990-01-01"
        type: string
      blood_group:
        example: O+
        type: string
      donation_count:
        example: 5
        type: integer
      donation_location:
        example: City Hospital
        type: string
      email:
        example: john@example.com
        type: string
      full_name:
        example: John Doe
        type: string
      gender:
        example: Male
        type: string
      health_conditions:
        allOf:
        - $ref: '#/definitions/models.HealthConditionType'
        example: healthy
      id:
        example: uuid
        type: string
      is_eligible:
        example: true
        type: boolean
      last_checkup_date:
        example: "2025-08-20T12:00:00Z"
        type: string
      last_donation:
        example: "2025-09-01T12:00:00Z"
        type: string
      password:
        example: hashed_password
        type: string
      phone_number:
        example: "+998901234567"
        type: string
      timestamps:
        $ref: '#/definitions/models.Timestamps3'
      weight:
        example: 72.5
        type: number
    type: object
  models.Personal:
    properties:
      address:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profession:
        type: string
      timestamps:
        $ref: '#/definitions/models.Timestamps1'
    type: object
  models.Prescription:
    properties:
      case_history:
        type: string
      description:
        type: string
      doctor_id:
        type: string
      id:
        type: string
      medication:
        type: string
      patient_id:
        type: string
      timestamps:
        $ref: '#/definitions/models.Timestamps2'
    type: object
  models.Timestamps1:
    properties:
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  models.Timestamps2:
    properties:
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  models.Timestamps3:
    properties:
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  models.Timestamps4:
    properties:
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  models.Timestamps5:
    properties:
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  models.UpdateAppointmentRequest:
    properties:
      date:
        type: string
      doctor_id:
        type: string
      id:
        type: string
      patient_id:
        type: string
    type: object
  models.UpdateAppointmentResponse:
    properties:
      appointment:
        $ref: '#/definitions/models.Appointment'
    type: object
  models.UpdateBedRequest:
    properties:
      bed_number:
        type: integer
      bed_type:
        $ref: '#/definitions/models.BedType'
      description:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/models.BedStatus'
    type: object
  models.UpdateBedResponse:
    properties:
      bed:
        $ref: '#/definitions/models.BedInfo'
    type: object
  models.UpdateDepartmentRequest:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      number:
        type: integer
    type: object
  models.UpdateDepartmentResponse:
    properties:
      department:
        $ref: '#/definitions/models.Department'
    type: object
  models.UpdateDoctorRequest:
    properties:
      department_number:
        type: integer
      id:
        type: string
    type: object
  models.UpdateDoctorResponse:
    properties:
      department_number:
        type: integer
      id:
        type: string
      personal_id:
        type: string
      timestamps:
        $ref: '#/definitions/models.Timestamps1'
    type: object
  models.UpdateDonorRequest:
    properties:
      address:
        example: 456 New Street, City
        type: string
      birth_date:
        example: "1990-01-01"
        type: string
      blood_group:
        example: O+
        type: string
      email:
        example: john@example.com
        type: string
      full_name:
        example: John Doe
        type: string
      gender:
        example: Male
        type: string
      health_conditions:
        allOf:
        - $ref: '#/definitions/models.HealthConditionType'
        example: minor_illness
      id:
        example: uuid
        type: string
      password:
        example: newSecret123
        type: string
      phone_number:
        example: "+998901234567"
        type: string
      weight:
        example: 75
        type: number
    type: object
  models.UpdateDonorResponse:
    properties:
      donor:
        $ref: '#/definitions/models.PatientDonor'
    type: object
  models.UpdateMedicineRequest:
    properties:
      category:
        $ref: '#/definitions/models.MedicineCategory'
      company:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      status:
        $ref: '#/definitions/models.MedicineStatus'
    type: object
  models.UpdateMedicineResponse:
    properties:
      medicine:
        $ref: '#/definitions/models.Medicine'
    type: object
  models.UpdatePatientRequest:
    properties:
      address:
        type: string
      birth_date:
        type: string
      blood_group:
        $ref: '#/definitions/models.BloodType'
      email:
        type: string
      full_name:
        type: string
      gender:
        $ref: '#/definitions/models.GenderType'
      id:
        type: string
      password:
        type: string
      phone_number:
        type: string
      timestamps:
        $ref: '#/definitions/models.Timestamps4'
    type: object
  models.UpdatePatientResponse:
    properties:
      patient:
        $ref: '#/definitions/models.Patient'
    type: object
  models.UpdatePersonalRequest:
    properties:
      address:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profession:
        type: string
    type: object
  models.UpdatePersonalResponse:
    properties:
      personal:
        $ref: '#/definitions/models.Personal'
    type: object
  models.UpdatePrescriptionRequest:
    properties:
      prescription:
        $ref: '#/definitions/models.Prescription'
    type: object
  models.UpdatePrescriptionResponse:
    properties:
      prescription:
        $ref: '#/definitions/models.Prescription'
    type: object
host: localhost:9000
info:
  contact: {}
  description: Api-gateway service
  version: "1.0"
paths:
  /admin/beds:
    get:
      consumes:
      - application/json
      description: This method gets beds list by filter
      parameters:
      - description: Search by room number, status, etc
        in: query
        name: search
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListBedsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET BEDS LIST
      tags:
      - BEDS
    post:
      consumes:
      - application/json
      description: This method creates bed
      parameters:
      - description: Bed
        in: body
        name: bed
        required: true
        schema:
          $ref: '#/definitions/models.CreateBedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateBedResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CREATE BED
      tags:
      - BEDS
  /admin/beds/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes bed
      parameters:
      - description: Bed Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteBedResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETE BED
      tags:
      - BEDS
    get:
      consumes:
      - application/json
      description: This method gets bed by id
      parameters:
      - description: Bed Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetBedByIDResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET BED BY ID
      tags:
      - BEDS
    put:
      consumes:
      - application/json
      description: This method updates bed
      parameters:
      - description: Bed Id
        in: path
        name: id
        required: true
        type: string
      - description: Bed
        in: body
        name: bed
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateBedResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATE BED
      tags:
      - BEDS
  /admin/departments:
    get:
      consumes:
      - application/json
      description: This method gets departments list by filter
      parameters:
      - description: Product search
        in: query
        name: search
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListDepartmentsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET DEPARTMENTS LIST
      tags:
      - DEPARTMENTS
    post:
      consumes:
      - application/json
      description: This method creates department
      parameters:
      - description: Department
        in: body
        name: department
        required: true
        schema:
          $ref: '#/definitions/models.CreateDepartmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateDepartmentResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CREATE DEPARTMENT
      tags:
      - DEPARTMENTS
  /admin/departments/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes department
      parameters:
      - description: Department Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteDepartmentResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETE DEPARTMENT
      tags:
      - DEPARTMENTS
    get:
      consumes:
      - application/json
      description: This method gets department by id
      parameters:
      - description: Department Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDepartmentByIdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET DEPARTMENT BY ID
      tags:
      - DEPARTMENTS
    put:
      consumes:
      - application/json
      description: This method updates departments
      parameters:
      - description: Department id
        in: path
        name: id
        required: true
        type: string
      - description: Department
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDepartmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateDepartmentResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATE DEPARTMENTS
      tags:
      - DEPARTMENTS
  /admin/doctors:
    get:
      consumes:
      - application/json
      description: This method gets doctors list by filter
      parameters:
      - description: Search by name, specialization, etc
        in: query
        name: search
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListDoctorsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET DOCTORS LIST
      tags:
      - DOCTORS
    post:
      consumes:
      - application/json
      description: This method creates doctor
      parameters:
      - description: Doctor
        in: body
        name: doctor
        required: true
        schema:
          $ref: '#/definitions/models.CreateDoctorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateDoctorResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CREATE DOCTOR
      tags:
      - DOCTORS
  /admin/doctors/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes doctor
      parameters:
      - description: Doctor Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeletePersonalResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETE DOCTOR
      tags:
      - DOCTORS
    get:
      consumes:
      - application/json
      description: This method gets doctor by id
      parameters:
      - description: Doctor Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDoctorByIdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET DOCTOR BY ID
      tags:
      - DOCTORS
    put:
      consumes:
      - application/json
      description: This method updates doctor
      parameters:
      - description: Doctor Id
        in: path
        name: id
        required: true
        type: string
      - description: Doctor
        in: body
        name: doctor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDoctorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateDoctorResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATE DOCTOR
      tags:
      - DOCTORS
  /admin/personals:
    get:
      consumes:
      - application/json
      description: This method gets personals list by filter
      parameters:
      - description: Search by profession or full_name
        in: query
        name: search
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListPersonalsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET PERSONALS LIST
      tags:
      - PERSONALS
    post:
      consumes:
      - application/json
      description: This method creates personal
      parameters:
      - description: Personal
        in: body
        name: personal
        required: true
        schema:
          $ref: '#/definitions/models.CreatePersonalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreatePersonalResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CREATE PERSONAL
      tags:
      - PERSONALS
  /admin/personals/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes personal
      parameters:
      - description: Personal Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeletePersonalResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETE PERSONAL
      tags:
      - PERSONALS
    get:
      consumes:
      - application/json
      description: This method gets personal by id
      parameters:
      - description: Personal Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetPersonalByIdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET PERSONAL BY ID
      tags:
      - PERSONALS
    put:
      consumes:
      - application/json
      description: This method updates personal
      parameters:
      - description: Personal Id
        in: path
        name: id
        required: true
        type: string
      - description: Personal
        in: body
        name: personal
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePersonalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdatePersonalResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATE PERSONAL
      tags:
      - PERSONALS
  /admin/prescriptions:
    get:
      consumes:
      - application/json
      description: This method gets prescriptions list
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListPrescriptionsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET PRESCRIPTIONS LIST
      tags:
      - PRESCRIPTIONS
    post:
      consumes:
      - application/json
      description: This method creates prescription
      parameters:
      - description: Prescription
        in: body
        name: prescription
        required: true
        schema:
          $ref: '#/definitions/models.CreatePrescriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreatePrescriptionResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CREATE PRESCRIPTION
      tags:
      - PRESCRIPTIONS
  /admin/prescriptions/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes prescription
      parameters:
      - description: Prescription Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeletePrescriptionResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETE PRESCRIPTION
      tags:
      - PRESCRIPTIONS
    get:
      consumes:
      - application/json
      description: This method gets prescription by id
      parameters:
      - description: Prescription Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetPrescriptionByIdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET PRESCRIPTION BY ID
      tags:
      - PRESCRIPTIONS
    put:
      consumes:
      - application/json
      description: This method updates prescription
      parameters:
      - description: Prescription id
        in: path
        name: id
        required: true
        type: string
      - description: Prescription
        in: body
        name: prescription
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePrescriptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdatePrescriptionResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATE PRESCRIPTION
      tags:
      - PRESCRIPTIONS
  /doctors/appointments:
    get:
      consumes:
      - application/json
      description: This method gets appointments list
      parameters:
      - description: Appointment date (yyyy-mm-dd)
        in: query
        name: date
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListAppointmentsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET APPOINTMENTS LIST
      tags:
      - APPOINTMENTS
    post:
      consumes:
      - application/json
      description: This method creates appointment
      parameters:
      - description: Appointment
        in: body
        name: appointment
        required: true
        schema:
          $ref: '#/definitions/models.CreateAppointmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateAppointmentResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CREATE APPOINTMENT
      tags:
      - APPOINTMENTS
  /doctors/appointments/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes appointment
      parameters:
      - description: Appointment Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteAppointmentResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETE APPOINTMENT
      tags:
      - APPOINTMENTS
    get:
      consumes:
      - application/json
      description: This method gets appointment by id
      parameters:
      - description: Appointment Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAppointmentByIdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET APPOINTMENT BY ID
      tags:
      - APPOINTMENTS
    put:
      consumes:
      - application/json
      description: This method updates appointment
      parameters:
      - description: Appointment Id
        in: path
        name: id
        required: true
        type: string
      - description: Appointment
        in: body
        name: appointment
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAppointmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateAppointmentResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATE APPOINTMENT
      tags:
      - APPOINTMENTS
  /nurse/donors:
    get:
      consumes:
      - application/json
      description: This method gets donors list by filter
      parameters:
      - description: Search by name/email
        in: query
        name: search
        type: string
      - description: Filter by gender
        in: query
        name: gender
        type: string
      - description: Filter by blood group
        in: query
        name: blood_group
        type: string
      - description: Only eligible donors
        in: query
        name: only_eligible
        type: boolean
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListDonorsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET DONORS LIST
      tags:
      - DONORS
    post:
      consumes:
      - application/json
      description: This method creates donor
      parameters:
      - description: Donor
        in: body
        name: donor
        required: true
        schema:
          $ref: '#/definitions/models.CreateDonorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateDonorResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CREATE DONOR
      tags:
      - DONORS
  /nurse/donors/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes donor
      parameters:
      - description: Donor Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteDonorResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETE DONOR
      tags:
      - DONORS
    get:
      consumes:
      - application/json
      description: This method gets donor by id
      parameters:
      - description: Donor Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetDonorByIdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET DONOR BY ID
      tags:
      - DONORS
    put:
      consumes:
      - application/json
      description: This method updates donor
      parameters:
      - description: Donor Id
        in: path
        name: id
        required: true
        type: string
      - description: Donor
        in: body
        name: donor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDonorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateDonorResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATE DONOR
      tags:
      - DONORS
  /patient/patients:
    get:
      consumes:
      - application/json
      description: This method gets patients list by filter
      parameters:
      - description: Search by name/email/phone
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListPatientsResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET PATIENTS LIST
      tags:
      - PATIENTS
    post:
      consumes:
      - application/json
      description: This method creates patient
      parameters:
      - description: Patient
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/models.CreatePatientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreatePatientResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CREATE PATIENT
      tags:
      - PATIENTS
  /patient/patients/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes patient
      parameters:
      - description: Patient Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeletePatientResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETE PATIENT
      tags:
      - PATIENTS
    get:
      consumes:
      - application/json
      description: This method gets patient by id
      parameters:
      - description: Patient Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetPatientByIdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET PATIENT BY ID
      tags:
      - PATIENTS
    put:
      consumes:
      - application/json
      description: This method updates patient
      parameters:
      - description: Patient Id
        in: path
        name: id
        required: true
        type: string
      - description: Patient
        in: body
        name: patient
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePatientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdatePatientResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATE PATIENT
      tags:
      - PATIENTS
  /pharmacist/medicines:
    get:
      consumes:
      - application/json
      description: This method gets medicines list by filter
      parameters:
      - description: Search by name/category/company
        in: query
        name: search
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListMedicinesResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET MEDICINES LIST
      tags:
      - MEDICINES
    post:
      consumes:
      - application/json
      description: This method creates medicine
      parameters:
      - description: Medicine
        in: body
        name: medicine
        required: true
        schema:
          $ref: '#/definitions/models.CreateMedicineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateMedicineResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: CREATE MEDICINE
      tags:
      - MEDICINES
  /pharmacist/medicines/{id}:
    delete:
      consumes:
      - application/json
      description: This method deletes medicine
      parameters:
      - description: Medicine Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteMedicineResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: DELETE MEDICINE
      tags:
      - MEDICINES
    get:
      consumes:
      - application/json
      description: This method gets medicine by id
      parameters:
      - description: Medicine Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetMedicineByIdResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: GET MEDICINE BY ID
      tags:
      - MEDICINES
    put:
      consumes:
      - application/json
      description: This method updates medicine
      parameters:
      - description: Medicine Id
        in: path
        name: id
        required: true
        type: string
      - description: Medicine
        in: body
        name: medicine
        required: true
        schema:
          $ref: '#/definitions/models.UpdateMedicineRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateMedicineResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: UPDATE MEDICINE
      tags:
      - MEDICINES
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

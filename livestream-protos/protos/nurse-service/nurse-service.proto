syntax = "proto3";

option go_package = "./genproto/nursepb";

import "google/protobuf/timestamp.proto";                 

// ---------------- Service ----------------
service NurseService {
    //Donor
    rpc CreateDonor(CreateDonorRequest) returns (CreateDonorResponse);
    rpc GetDonorById(GetDonorByIdRequest) returns (GetDonorByIdResponse);
    rpc ListDonors(ListDonorsRequest) returns (ListDonorsResponse);
    rpc UpdateDonor(UpdateDonorRequest) returns (UpdateDonorResponse);
    rpc DeleteDonor(DeleteDonorRequest) returns (DeleteDonorResponse);

    //Bed Management
    rpc AssignPatientToBed(AssignPatientToBedRequest) returns (AssignPatientToBedResponse);
    rpc ReleaseBed(ReleaseBedRequest) returns (ReleaseBedResponse);
    rpc ReserveBed(ReserveBedRequest) returns (ReserveBedResponse);
    rpc GetBedById(GetBedByIdRequest) returns (GetBedByIdResponse);
    rpc ListBedsByStatus(ListBedsRequest) returns (ListBedsResponse);

    // EVENTS
    rpc RegisterDonation(RegisterDonationRequest) returns (RegisterDonationResponse);
    rpc RegisterCheckup(RegisterCheckupRequest) returns (RegisterCheckupResponse);
}

// Bed status enum
enum BedStatus {
    BED_UNSPECIFIED = 0; // default
    BED_AVAILABLE = 1;
    BED_OCCUPIED = 2;
    BED_RESERVED = 3;
    BED_MAINTENANCE = 4;
}

// health condition enum
enum HealthConditionType {
    HEALTH_CONDITION_TYPE_UNSPECIFIED = 0; // default
    HEALTHY = 1;
    STABLE = 2;
    CRITICAL = 3;
    RECOVERING = 4;
}

message PatientDonor {
    string id = 1;
    string full_name = 2;
    string email = 3;
    string password = 4;
    string address = 5;
    string phone_number = 6;
    string gender = 7;
    string birth_date = 8;
    string blood_group = 9;
    google.protobuf.Timestamp last_donation = 10;
    int32 donation_count = 11;
    bool is_eligible = 12;
    google.protobuf.Timestamp last_checkup_date = 13;
    double weight = 14;
    string health_conditions = 15;
    string donation_location = 16;
    Timestamps3 timestamps = 17;
}

message BedManagement {
    string id = 1;
    string bed_id = 2;
    string patient_id = 3;
    BedStatus status = 5; 
    google.protobuf.Timestamp assigned_at=6;
    google.protobuf.Timestamp updated_at=7;
}

// ---------------- Donor CRUD ----------------
//CREATE
message CreateDonorRequest {
    string full_name = 1;
    string email = 2;
    string password = 3;
    string address = 4;
    string phone_number = 5;
    string gender = 6;
    string birth_date = 7;
    string blood_group = 8;
    double weight = 9;
    string health_conditions = 10;
}
message CreateDonorResponse {
    PatientDonor donor = 1;
}

// GET BY ID
message GetDonorByIdRequest {
    string id = 1;
}
message GetDonorByIdResponse {
    PatientDonor donor = 1;
}

//LIST
message ListDonorsRequest {
    string search = 1;        // name, email
    string gender = 2;        // filter (example: Male/Female)
    string blood_group = 3;
    bool only_eligible = 4;
    int32 page = 5;
    int32 limit = 6;
}
message ListDonorsResponse {
    repeated PatientDonor patients = 1;
    int32 total_count = 2;
}

// UPDATE
message UpdateDonorRequest {
    string id = 1;
    string full_name = 2;
    string email = 3;
    string password = 4;
    string address = 5;
    string phone_number = 6;
    string gender = 7;
    string birth_date = 8;
    string blood_group = 9;
    double weight = 10;
    string health_conditions = 11;
}
message UpdateDonorResponse {
    PatientDonor donor = 1;
}

// DELETE
message DeleteDonorRequest {
    string id = 1;
}
message DeleteDonorResponse {
    int64 status = 1; // 204 = deleted
}

// Register a new donation
message RegisterDonationRequest {
    string donor_id = 1;
    string donation_location = 2;
}
message RegisterDonationResponse {
    google.protobuf.Timestamp last_donation = 1;
    int32 donation_count = 2;
    bool is_eligible = 3;
}

// Register medical checkup
message RegisterCheckupRequest {
    string donor_id = 1;
}
message RegisterCheckupResponse {
    google.protobuf.Timestamp last_checkup_date = 1;
    bool is_eligible = 2;
}

// ---------------- Bed Management----------------
//ASSIGN
message AssignPatientToBedRequest {
    string bed_id = 1;
    string patient_id = 2;
}

message AssignPatientToBedResponse {
    BedManagement bed = 1;
}

//RELEASE 
message ReleaseBedRequest {
    string bed_id = 1;
}
message ReleaseBedResponse {
    BedManagement bed = 1;
}

//RESERVE BED
message ReserveBedRequest {
    string bed_id = 1;
    string patient_id = 2;
}
message ReserveBedResponse {
    BedManagement bed = 1;
}

//GET BY ID
message GetBedByIdRequest {
    string bed_id = 1;
}
message GetBedByIdResponse {
    BedManagement bed = 1;
}

//LIST
message ListBedsRequest {
    BedStatus status = 1;
    int32 page = 3;
    int32 limit = 4;

}
message ListBedsResponse {
    repeated BedManagement beds = 1;
    int32 total_count = 2;
}

message Timestamps3 {
    google.protobuf.Timestamp created_at = 1;
    google.protobuf.Timestamp updated_at = 2;
}